{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","ingredients","className","src","map","ingredient","text","toFixed","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAwBeA,EAtBA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACrC,OACI,8BACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKA,UAAU,kFAAkFC,IAAKH,IACtG,sBAAKE,UAAU,qFAAf,UACI,oBAAIA,UAAU,sCAAd,SAAqDJ,IACrD,oBAAII,UAAU,+BAAd,yBACA,oBAAIA,UAAU,4BAAd,SACKD,EAAYG,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,oBAAIJ,UAAU,+BAAd,sBACA,oBAAIA,UAAU,oBAAd,SAAoCH,EAAUQ,QAAQ,cCwC3DC,G,MApDH,WAEV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,QAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,GAJK,2CAAH,qDAiBhB,OACE,sBAAKpB,UAAU,+BAAf,UACE,qBAAIA,UAAU,uDAAd,cAAsE,sBAAMA,UAAU,eAAhB,qBAAtE,kBAAwH,sBAAMA,UAAU,gBAAhB,mBAAxH,mBAA0K,sBAAMA,UAAU,kBAAhB,kBAA1K,mBAA6N,sBAAMA,UAAU,gBAAhB,qBAA7N,mDACA,uBAAMwB,SATQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAMmBX,UAAU,0BAArC,UACE,uBAAOA,UAAU,uDAAuD2B,KAAK,OAAOC,MAAOlB,EAAQmB,SAdpF,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAcf,wBAAQ5B,UAAU,kGAAkG2B,KAAK,SAAzH,uBAEF,qBAAK3B,UAAU,sCAAf,SACGQ,EAAQN,KAAI,SAAA6B,GAAM,OACjB,cAAC,EAAD,CAEEnC,MAAOmC,EAAOA,OAAOC,MACrBnC,SAAUkC,EAAOA,OAAOlC,SACxBC,MAAOiC,EAAOA,OAAOjC,MACrBC,YAAagC,EAAOA,OAAOhC,aAJtBgC,EAAOA,OAAOC,iBChChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88d9eee6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Recipe = ({title, calories, image, ingredients}) => {\n    return (\n        <div>\n            <div className=\"justify-center flex md:flex-row flex-col\">\n                <img className=\"md:w-2/4 object-fill md:rounded-l-3xl md:rounded-t-none rounded-t-3xl shadow-lg\" src={image}/>\n                <div className=\"px-6 py-4 md:w-5/6 card md:rounded-r-3xl md:rounded-b-none rounded-b-3xl shadow-lg\">\n                    <h1 className='text-4xl text-center font-bold mb-2'>{title}</h1>\n                    <h2 className='mt-4 text-2xl font-bold ml-2'>Ingredients</h2>\n                    <ul className='text-xl ml-2 md:ml-8 mt-4'>\n                        {ingredients.map(ingredient => (\n                            <li>{ingredient.text}</li>\n                        ))}\n                    </ul>\n                    <h2 className='mt-4 text-2xl ml-2 font-bold'>Calories</h2>\n                    <h3 className=\"text-xl ml-2 mt-1\">{(calories).toFixed(1)}</h3>\n                </div> \n            </div> \n        </div>\n        \n    );\n};\n\nexport default Recipe;","import React, {useEffect, useState} from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n\n  const APP_ID = '5122b075';\n  const APP_KEY = '9b2b698f05a35494ae9d354f3cffe2d4';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('rice');\n\n  useEffect(() => {\n    getRecipes(); \n  }, [query]); \n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data);\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n\n  return (\n    <div className='container mx-auto md:p-8 p-4'>\n      <h1 className='md:text-5xl text-4xl text-center font-extrabold pb-8'> <span className='text-red-600'>Search </span>üîç | <span className='text-pink-600'>Cook </span> ü•ò | <span className='text-purple-700'>Eat </span> üçΩ | <span className='text-blue-700'>Repeat </span> üíÅüèª‚Äç‚ôÇÔ∏è !</h1>\n      <form onSubmit={getSearch} className='search-form text-center'>\n        <input className='search-bar py-2 px-4 md:w-1/2 w-2/3 rounded text-2xl' type=\"text\" value={search} onChange={updateSearch}/>\n        <button className='search-button bg-yellow-700 hover:bg-yellow-800 text-white font-bold py-2 px-4 text-2xl rounded' type=\"submit\">Search</button>\n      </form>\n      <div className='w-full grid grid-cols-1 mt-8 gap-10'>\n        {recipes.map(recipe => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}